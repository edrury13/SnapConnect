package com.example.snapconnect.ui.screens.camera;

@kotlin.Metadata(mv = {1, 9, 0}, k = 2, xi = 48, d1 = {"\u0000\u00b0\u0001\n\u0000\n\u0002\u0010\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u000e\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0010 \n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u000b\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0003\u001a&\u0010\u0000\u001a\u00020\u00012\u0006\u0010\u0002\u001a\u00020\u00032\n\b\u0002\u0010\u0004\u001a\u0004\u0018\u00010\u00052\b\b\u0002\u0010\u0006\u001a\u00020\u0007H\u0007\u001a$\u0010\b\u001a\u00020\u00012\f\u0010\t\u001a\b\u0012\u0004\u0012\u00020\u00010\n2\f\u0010\u000b\u001a\b\u0012\u0004\u0012\u00020\u00010\nH\u0003\u001aJ\u0010\f\u001a\u00020\u00012\u0006\u0010\r\u001a\u00020\u000e2\b\u0010\u000f\u001a\u0004\u0018\u00010\u00102\u0006\u0010\u0011\u001a\u00020\u00122\u0012\u0010\u0013\u001a\u000e\u0012\u0004\u0012\u00020\u0015\u0012\u0004\u0012\u00020\u00010\u00142\u0012\u0010\u0016\u001a\u000e\u0012\u0004\u0012\u00020\u0017\u0012\u0004\u0012\u00020\u00010\u0014H\u0002\u001az\u0010\u0018\u001a\u00020\u00012\u0006\u0010\r\u001a\u00020\u000e2\b\u0010\u000f\u001a\u0004\u0018\u00010\u00102\u0006\u0010\u0011\u001a\u00020\u00122\f\u0010\u0019\u001a\b\u0012\u0004\u0012\u00020\u001b0\u001a2\b\u0010\u001c\u001a\u0004\u0018\u00010\u001d2\u0006\u0010\u001e\u001a\u00020\u001f2\u0006\u0010 \u001a\u00020!2\u0006\u0010\"\u001a\u00020#2\u0012\u0010\u0013\u001a\u000e\u0012\u0004\u0012\u00020\u0015\u0012\u0004\u0012\u00020\u00010\u00142\u0012\u0010\u0016\u001a\u000e\u0012\u0004\u0012\u00020\u0017\u0012\u0004\u0012\u00020\u00010\u0014H\u0002\u001a\u0092\u0001\u0010$\u001a\u00020\u00012\u0006\u0010\r\u001a\u00020\u000e2\u0006\u0010%\u001a\u00020&2\f\u0010\'\u001a\b\u0012\u0004\u0012\u00020)0(2\u0006\u0010*\u001a\u00020+2\u0006\u0010 \u001a\u00020!2*\u0010,\u001a&\u0012\u0004\u0012\u00020.\u0012\u0004\u0012\u00020\u0010\u0012\n\u0012\b\u0012\u0004\u0012\u0002000/\u0012\u0004\u0012\u000201\u0012\u0004\u0012\u00020\u00010-2\u0018\u00102\u001a\u0014\u0012\n\u0012\b\u0012\u0004\u0012\u00020\u001b0\u001a\u0012\u0004\u0012\u00020\u00010\u00142\u0014\b\u0002\u00103\u001a\u000e\u0012\u0004\u0012\u000204\u0012\u0004\u0012\u00020\u00010\u0014H\u0002\u001a\\\u00105\u001a\u0004\u0018\u0001062\u0006\u0010\r\u001a\u00020\u000e2\u000e\u00107\u001a\n\u0012\u0004\u0012\u000200\u0018\u00010/2\u0006\u0010\u0011\u001a\u00020\u00122\b\u0010\u001c\u001a\u0004\u0018\u00010\u001d2\u0012\u00108\u001a\u000e\u0012\u0004\u0012\u00020\u0015\u0012\u0004\u0012\u00020\u00010\u00142\u0012\u0010\u0016\u001a\u000e\u0012\u0004\u0012\u000209\u0012\u0004\u0012\u00020\u00010\u0014H\u0002\u001a\u0012\u0010:\u001a\u00020\u00012\b\u0010;\u001a\u0004\u0018\u000106H\u0002\u00a8\u0006<"}, d2 = {"CameraScreen", "", "navController", "Landroidx/navigation/NavController;", "groupId", "", "viewModel", "Lcom/example/snapconnect/ui/screens/camera/CameraViewModel;", "PermissionRequestScreen", "onRequestPermission", "Lkotlin/Function0;", "onBack", "capturePhoto", "context", "Landroid/content/Context;", "imageCapture", "Landroidx/camera/core/ImageCapture;", "executor", "Ljava/util/concurrent/Executor;", "onPhotoCaptured", "Lkotlin/Function1;", "Landroid/net/Uri;", "onError", "Landroidx/camera/core/ImageCaptureException;", "capturePhotoWithFilter", "faces", "", "Lcom/google/mlkit/vision/face/Face;", "selectedFilter", "Lcom/example/snapconnect/data/model/ARFilter;", "filterProcessor", "Lcom/example/snapconnect/utils/FilterProcessor;", "isFrontCamera", "", "scope", "Lkotlinx/coroutines/CoroutineScope;", "startCamera", "lifecycleOwner", "Landroidx/lifecycle/LifecycleOwner;", "cameraProviderFuture", "Lcom/google/common/util/concurrent/ListenableFuture;", "Landroidx/camera/lifecycle/ProcessCameraProvider;", "previewView", "Landroidx/camera/view/PreviewView;", "onCameraReady", "Lkotlin/Function4;", "Landroidx/camera/core/Camera;", "Landroidx/camera/video/VideoCapture;", "Landroidx/camera/video/Recorder;", "Landroidx/camera/core/ImageAnalysis;", "onFacesDetected", "onImageSizeChanged", "Landroidx/compose/ui/geometry/Size;", "startVideoRecording", "Landroidx/camera/video/Recording;", "videoCapture", "onVideoSaved", "Landroidx/camera/video/VideoRecordEvent;", "stopRecording", "recording", "app_debug"})
public final class CameraScreenKt {
    
    @kotlin.OptIn(markerClass = {com.google.accompanist.permissions.ExperimentalPermissionsApi.class, androidx.compose.material3.ExperimentalMaterial3Api.class})
    @androidx.compose.runtime.Composable()
    public static final void CameraScreen(@org.jetbrains.annotations.NotNull()
    androidx.navigation.NavController navController, @org.jetbrains.annotations.Nullable()
    java.lang.String groupId, @org.jetbrains.annotations.NotNull()
    com.example.snapconnect.ui.screens.camera.CameraViewModel viewModel) {
    }
    
    @androidx.compose.runtime.Composable()
    private static final void PermissionRequestScreen(kotlin.jvm.functions.Function0<kotlin.Unit> onRequestPermission, kotlin.jvm.functions.Function0<kotlin.Unit> onBack) {
    }
    
    private static final void startCamera(android.content.Context context, androidx.lifecycle.LifecycleOwner lifecycleOwner, com.google.common.util.concurrent.ListenableFuture<androidx.camera.lifecycle.ProcessCameraProvider> cameraProviderFuture, androidx.camera.view.PreviewView previewView, boolean isFrontCamera, kotlin.jvm.functions.Function4<? super androidx.camera.core.Camera, ? super androidx.camera.core.ImageCapture, ? super androidx.camera.video.VideoCapture<androidx.camera.video.Recorder>, ? super androidx.camera.core.ImageAnalysis, kotlin.Unit> onCameraReady, kotlin.jvm.functions.Function1<? super java.util.List<? extends com.google.mlkit.vision.face.Face>, kotlin.Unit> onFacesDetected, kotlin.jvm.functions.Function1<? super androidx.compose.ui.geometry.Size, kotlin.Unit> onImageSizeChanged) {
    }
    
    private static final void capturePhotoWithFilter(android.content.Context context, androidx.camera.core.ImageCapture imageCapture, java.util.concurrent.Executor executor, java.util.List<? extends com.google.mlkit.vision.face.Face> faces, com.example.snapconnect.data.model.ARFilter selectedFilter, com.example.snapconnect.utils.FilterProcessor filterProcessor, boolean isFrontCamera, kotlinx.coroutines.CoroutineScope scope, kotlin.jvm.functions.Function1<? super android.net.Uri, kotlin.Unit> onPhotoCaptured, kotlin.jvm.functions.Function1<? super androidx.camera.core.ImageCaptureException, kotlin.Unit> onError) {
    }
    
    private static final void capturePhoto(android.content.Context context, androidx.camera.core.ImageCapture imageCapture, java.util.concurrent.Executor executor, kotlin.jvm.functions.Function1<? super android.net.Uri, kotlin.Unit> onPhotoCaptured, kotlin.jvm.functions.Function1<? super androidx.camera.core.ImageCaptureException, kotlin.Unit> onError) {
    }
    
    private static final androidx.camera.video.Recording startVideoRecording(android.content.Context context, androidx.camera.video.VideoCapture<androidx.camera.video.Recorder> videoCapture, java.util.concurrent.Executor executor, com.example.snapconnect.data.model.ARFilter selectedFilter, kotlin.jvm.functions.Function1<? super android.net.Uri, kotlin.Unit> onVideoSaved, kotlin.jvm.functions.Function1<? super androidx.camera.video.VideoRecordEvent, kotlin.Unit> onError) {
        return null;
    }
    
    private static final void stopRecording(androidx.camera.video.Recording recording) {
    }
}