package com.example.snapconnect.ui.screens.camera;

@kotlin.Metadata(mv = {1, 9, 0}, k = 2, xi = 48, d1 = {"\u0000|\n\u0000\n\u0002\u0010\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u000b\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\u0010 \n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\u001a~\u0010\u0000\u001a\u00020\u00012\b\b\u0002\u0010\u0002\u001a\u00020\u00032\u0006\u0010\u0004\u001a\u00020\u00052\b\u0010\u0006\u001a\u0004\u0018\u00010\u00072*\u0010\b\u001a&\u0012\u0004\u0012\u00020\n\u0012\u0004\u0012\u00020\u000b\u0012\n\u0012\b\u0012\u0004\u0012\u00020\r0\f\u0012\u0004\u0012\u00020\u000e\u0012\u0004\u0012\u00020\u00010\t2\u0018\u0010\u000f\u001a\u0014\u0012\n\u0012\b\u0012\u0004\u0012\u00020\u00120\u0011\u0012\u0004\u0012\u00020\u00010\u00102\u0012\u0010\u0013\u001a\u000e\u0012\u0004\u0012\u00020\u0014\u0012\u0004\u0012\u00020\u00010\u0010H\u0007\u001a\u0010\u0010\u0015\u001a\u00020\u00162\u0006\u0010\u0017\u001a\u00020\u0018H\u0002\u001ah\u0010\u0019\u001a\u00020\u00012\u0006\u0010\u0017\u001a\u00020\u00182\u0006\u0010\u001a\u001a\u00020\u001b2\b\u0010\u0006\u001a\u0004\u0018\u00010\u00072\u0006\u0010\u001c\u001a\u00020\u001d2\u0006\u0010\u0004\u001a\u00020\u00052\u0006\u0010\u001e\u001a\u00020\u001f2\u0018\u0010\u000f\u001a\u0014\u0012\n\u0012\b\u0012\u0004\u0012\u00020\u00120\u0011\u0012\u0004\u0012\u00020\u00010\u00102\u0012\u0010\u0013\u001a\u000e\u0012\u0004\u0012\u00020\u0014\u0012\u0004\u0012\u00020\u00010\u0010H\u0002\u001a\u00a4\u0001\u0010 \u001a\u00020\u00012\u0006\u0010!\u001a\u00020\"2\u0006\u0010#\u001a\u00020$2\u0006\u0010%\u001a\u00020&2\u0006\u0010\u001a\u001a\u00020\u001b2\u0006\u0010\u0004\u001a\u00020\u00052\b\u0010\u0006\u001a\u0004\u0018\u00010\u00072\u0006\u0010\u001c\u001a\u00020\u001d2\u0006\u0010\u001e\u001a\u00020\u001f2*\u0010\b\u001a&\u0012\u0004\u0012\u00020\n\u0012\u0004\u0012\u00020\u000b\u0012\n\u0012\b\u0012\u0004\u0012\u00020\r0\f\u0012\u0004\u0012\u00020\u000e\u0012\u0004\u0012\u00020\u00010\t2\u0018\u0010\u000f\u001a\u0014\u0012\n\u0012\b\u0012\u0004\u0012\u00020\u00120\u0011\u0012\u0004\u0012\u00020\u00010\u00102\u0012\u0010\u0013\u001a\u000e\u0012\u0004\u0012\u00020\u0014\u0012\u0004\u0012\u00020\u00010\u0010H\u0002\u00a8\u0006\'"}, d2 = {"FilteredCameraPreview", "", "modifier", "Landroidx/compose/ui/Modifier;", "isFrontCamera", "", "selectedFilter", "Lcom/example/snapconnect/data/model/ARFilter;", "onCameraReady", "Lkotlin/Function4;", "Landroidx/camera/core/Camera;", "Landroidx/camera/core/ImageCapture;", "Landroidx/camera/video/VideoCapture;", "Landroidx/camera/video/Recorder;", "Landroidx/camera/core/ImageAnalysis;", "onFacesDetected", "Lkotlin/Function1;", "", "Lcom/google/mlkit/vision/face/Face;", "onImageSizeChanged", "Landroidx/compose/ui/geometry/Size;", "imageProxyToBitmap", "Landroid/graphics/Bitmap;", "imageProxy", "Landroidx/camera/core/ImageProxy;", "processFrame", "textureView", "Landroid/view/TextureView;", "filterProcessor", "Lcom/example/snapconnect/ui/screens/camera/FilterProcessor;", "scope", "Lkotlinx/coroutines/CoroutineScope;", "startFilteredCamera", "context", "Landroid/content/Context;", "lifecycleOwner", "Landroidx/lifecycle/LifecycleOwner;", "cameraProvider", "Landroidx/camera/lifecycle/ProcessCameraProvider;", "app_debug"})
public final class FilteredCameraPreviewKt {
    
    @androidx.compose.runtime.Composable()
    public static final void FilteredCameraPreview(@org.jetbrains.annotations.NotNull()
    androidx.compose.ui.Modifier modifier, boolean isFrontCamera, @org.jetbrains.annotations.Nullable()
    com.example.snapconnect.data.model.ARFilter selectedFilter, @org.jetbrains.annotations.NotNull()
    kotlin.jvm.functions.Function4<? super androidx.camera.core.Camera, ? super androidx.camera.core.ImageCapture, ? super androidx.camera.video.VideoCapture<androidx.camera.video.Recorder>, ? super androidx.camera.core.ImageAnalysis, kotlin.Unit> onCameraReady, @org.jetbrains.annotations.NotNull()
    kotlin.jvm.functions.Function1<? super java.util.List<? extends com.google.mlkit.vision.face.Face>, kotlin.Unit> onFacesDetected, @org.jetbrains.annotations.NotNull()
    kotlin.jvm.functions.Function1<? super androidx.compose.ui.geometry.Size, kotlin.Unit> onImageSizeChanged) {
    }
    
    private static final void startFilteredCamera(android.content.Context context, androidx.lifecycle.LifecycleOwner lifecycleOwner, androidx.camera.lifecycle.ProcessCameraProvider cameraProvider, android.view.TextureView textureView, boolean isFrontCamera, com.example.snapconnect.data.model.ARFilter selectedFilter, com.example.snapconnect.ui.screens.camera.FilterProcessor filterProcessor, kotlinx.coroutines.CoroutineScope scope, kotlin.jvm.functions.Function4<? super androidx.camera.core.Camera, ? super androidx.camera.core.ImageCapture, ? super androidx.camera.video.VideoCapture<androidx.camera.video.Recorder>, ? super androidx.camera.core.ImageAnalysis, kotlin.Unit> onCameraReady, kotlin.jvm.functions.Function1<? super java.util.List<? extends com.google.mlkit.vision.face.Face>, kotlin.Unit> onFacesDetected, kotlin.jvm.functions.Function1<? super androidx.compose.ui.geometry.Size, kotlin.Unit> onImageSizeChanged) {
    }
    
    private static final void processFrame(androidx.camera.core.ImageProxy imageProxy, android.view.TextureView textureView, com.example.snapconnect.data.model.ARFilter selectedFilter, com.example.snapconnect.ui.screens.camera.FilterProcessor filterProcessor, boolean isFrontCamera, kotlinx.coroutines.CoroutineScope scope, kotlin.jvm.functions.Function1<? super java.util.List<? extends com.google.mlkit.vision.face.Face>, kotlin.Unit> onFacesDetected, kotlin.jvm.functions.Function1<? super androidx.compose.ui.geometry.Size, kotlin.Unit> onImageSizeChanged) {
    }
    
    private static final android.graphics.Bitmap imageProxyToBitmap(androidx.camera.core.ImageProxy imageProxy) {
        return null;
    }
}